{"mappings":"ACAA,MAAM,EAAS,mCACf,IAAI,EAAgB,EAChB,EAAiB,EAAE,CAGvB,MAAM,EAAS,SAAS,cAAc,CAAC,UACjC,EAAW,SAAS,cAAc,CAAC,aAEzC,EAAO,gBAAgB,CAAC,QAAS,KAC7B,EAAS,SAAS,CAAC,MAAM,CAAC,OAC9B,GA8DA,SAAS,gBAAgB,CAAC,mBAAoB,KAxD1C,MAFY,CAAC,4DAA4D,EAAE,EAAO,CAAC,EAG9E,IAAI,CAAC,AAAA,IACF,GAAI,CAAC,EAAS,EAAE,CACZ,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAC,CAAC,EAE5D,OAAO,EAAS,IAAI,EACxB,GACC,IAAI,CAAC,AAAA,IACF,IAAM,EAAW,SAAS,cAAc,CAAC,aACnC,EAAW,SAAS,cAAc,CAAC,WACzC,CAAA,EAAS,SAAS,CAAG,GACrB,EAAS,SAAS,CAAG,GACrB,EAAiB,EAAE,CAEnB,EAAK,OAAO,CAAC,OAAO,CAAC,CAAC,EAAM,KAExB,IAAM,EAAW,SAAS,aAAa,CAAC,MACxC,CAAA,EAAS,SAAS,CAAG,YACrB,EAAS,SAAS,CAAG,CAAC;6BACT,EAAE,EAAK,GAAG,CAAC;kCACN,EAAE,EAAK,UAAU,CAAC,MAAM,CAAG,EAAI,EAAK,UAAU,CAAC,EAAE,CAAC,GAAG,CAAG,4BAA4B,OAAO,EAAE,EAAK,KAAK,CAAC;;wBAElH,EAAE,EAAK,KAAK,CAAC;uBACd,EAAE,EAAK,QAAQ,CAAC;gBACvB,CAAC,CACD,EAAS,WAAW,CAAC,GAGjB,EAAQ,GACR,EAAe,IAAI,CAAC,EAAK,UAAU,CAAC,EAAE,EAAE,KAAO,4BAEvD,GAEA,AAMZ,WACI,IAAM,EAAW,SAAS,cAAc,CAAC,YACzC,EAAe,OAAO,CAAC,CAAC,EAAO,KAC3B,IAAM,EAAM,SAAS,aAAa,CAAC,MACnC,CAAA,EAAI,GAAG,CAAG,EACV,EAAI,KAAK,CAAC,OAAO,CAAG,AAAU,IAAV,EAAc,QAAU,OAC5C,EAAS,WAAW,CAAC,EACzB,GAEA,YAAY,KACR,EAAS,QAAQ,CAAC,EAAc,CAAC,KAAK,CAAC,OAAO,CAAG,OACjD,EAAiB,AAAA,CAAA,EAAgB,CAAA,EAAK,EAAe,MAAM,CAC3D,EAAS,QAAQ,CAAC,EAAc,CAAC,KAAK,CAAC,OAAO,CAAG,OACrD,EAAG,IACP,GAnBQ,GACC,KAAK,CAAC,AAAA,GAAS,QAAQ,KAAK,CAAC,uBAAwB,IAyB1D,SAAS,gBAAgB,CAAC,eAAe,OAAO,CAAC,AAAA,IAC7C,EAAK,gBAAgB,CAAC,QAAS,AAAC,IAC5B,EAAM,cAAc,GAEpB,AAMZ,SAAkC,CAAO,EAGrC,MAFY,CAAC,0CAA0C,EAAE,EAAQ,cAAc,EAAE,EAAO,CAAC,EAGpF,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IACF,IAAM,EAAW,SAAS,cAAc,CAAC,YACzC,CAAA,EAAS,SAAS,CAAG,GAErB,EAAK,OAAO,CAAC,OAAO,CAAC,AAAA,IAEjB,IAAM,EAAW,SAAS,aAAa,CAAC,MACxC,CAAA,EAAS,SAAS,CAAG,YACrB,EAAS,SAAS,CAAG,CAAC;6BACT,EAAE,EAAK,GAAG,CAAC;kCACN,EAAE,EAAK,UAAU,CAAC,MAAM,CAAG,EAAI,EAAK,UAAU,CAAC,EAAE,CAAC,GAAG,CAAG,4BAA4B,OAAO,EAAE,EAAK,KAAK,CAAC;;wBAElH,EAAE,EAAK,KAAK,CAAC;uBACd,EAAE,EAAK,QAAQ,CAAC;gBACvB,CAAC,CACD,EAAS,WAAW,CAAC,EACzB,EACJ,GACC,KAAK,CAAC,AAAA,GAAS,QAAQ,KAAK,CAAC,+BAAgC,GACtE,EA/B4B,EAAM,MAAM,CAAC,YAAY,CAAC,gBAE9C,EACJ,EACJ,GAoDA,SAAS,gBAAgB,CAAC,mBAtB1B,WAGI,MAFY,CAAC,+DAA+D,EAAE,EAAO,CAAC,EAGjF,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IACF,IAAM,EAAiB,SAAS,cAAc,CAAC,kBAC/C,CAAA,EAAe,SAAS,CAAG,mBAC3B,EAAK,OAAO,CAAC,OAAO,CAAC,AAAA,IACjB,IAAM,EAAc,SAAS,aAAa,CAAC,MAC3C,CAAA,EAAY,SAAS,CAAG,eACxB,EAAY,SAAS,CAAG,CAAC;wBACjB,EAAE,EAAQ,KAAK,CAAC;uBACjB,EAAE,EAAQ,QAAQ,CAAC;gBAC1B,CAAC,CACD,EAAe,WAAW,CAAC,EAC/B,EACJ,GACC,KAAK,CAAC,AAAA,GAAS,QAAQ,KAAK,CAAC,mCAAoC,GAC1E","sources":["<anon>","src/script.js"],"sourcesContent":["const apiKey = \"QCStfBADCgUfROJuwwK6ZG3GIMWuxnyg\"; // Ensure this is correct\nlet carouselIndex = 0;\nlet carouselImages = [];\n// Burger menu toggle functionality\nconst burger = document.getElementById(\"burger\");\nconst navLinks = document.getElementById(\"nav-links\");\nburger.addEventListener(\"click\", ()=>{\n    navLinks.classList.toggle(\"show\");\n});\n// Function to fetch news from the New York Times API (Home Section)\nfunction fetchNews() {\n    const url = `https://api.nytimes.com/svc/topstories/v2/home.json?api-key=${apiKey}`;\n    fetch(url).then((response)=>{\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        return response.json();\n    }).then((data)=>{\n        const newsGrid = document.getElementById(\"news-grid\");\n        const carousel = document.getElementById(\"carousel\");\n        newsGrid.innerHTML = \"\"; // Clear previous news\n        carousel.innerHTML = \"\"; // Clear previous carousel images\n        carouselImages = []; // Reset carousel images\n        data.results.forEach((news, index)=>{\n            // Create news card\n            const newsCard = document.createElement(\"div\");\n            newsCard.className = \"news-card\";\n            newsCard.innerHTML = `\n                    <a href=\"${news.url}\" target=\"_blank\">\n                        <img src=\"${news.multimedia.length > 0 ? news.multimedia[0].url : \"placeholder-image-url.jpg\"}\" alt=\"${news.title}\">\n                    </a>\n                    <h3>${news.title}</h3>\n                    <p>${news.abstract}</p>\n                `;\n            newsGrid.appendChild(newsCard);\n            // Add to carousel images, limit to 5\n            if (index < 5) carouselImages.push(news.multimedia[0]?.url || \"placeholder-image-url.jpg\");\n        });\n        startCarousel(); // Start carousel after loading images\n    }).catch((error)=>console.error(\"Error fetching news:\", error));\n}\n// Function to start the carousel\nfunction startCarousel() {\n    const carousel = document.getElementById(\"carousel\");\n    carouselImages.forEach((image, index)=>{\n        const img = document.createElement(\"img\");\n        img.src = image;\n        img.style.display = index === 0 ? \"block\" : \"none\"; // Show the first image\n        carousel.appendChild(img);\n    });\n    setInterval(()=>{\n        carousel.children[carouselIndex].style.display = \"none\"; // Hide current image\n        carouselIndex = (carouselIndex + 1) % carouselImages.length; // Update index\n        carousel.children[carouselIndex].style.display = \"block\"; // Show next image\n    }, 2000); // Change every 2 seconds\n}\n// Fetch news on page load\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    fetchNews();\n    // Set up event listeners for navigation links\n    document.querySelectorAll(\"nav ul li a\").forEach((link)=>{\n        link.addEventListener(\"click\", (event)=>{\n            event.preventDefault();\n            const section = event.target.getAttribute(\"data-section\");\n            fetchTopStoriesBySection(section); // Fetch stories for the selected section\n        });\n    });\n});\n// Function to fetch top stories by section\nfunction fetchTopStoriesBySection(section) {\n    const url = `https://api.nytimes.com/svc/topstories/v2/${section}.json?api-key=${apiKey}`;\n    fetch(url).then((response)=>response.json()).then((data)=>{\n        const newsGrid = document.getElementById(\"news-grid\");\n        newsGrid.innerHTML = \"\"; // Clear previous news\n        data.results.forEach((news)=>{\n            // Create news card\n            const newsCard = document.createElement(\"div\");\n            newsCard.className = \"news-card\";\n            newsCard.innerHTML = `\n                    <a href=\"${news.url}\" target=\"_blank\">\n                        <img src=\"${news.multimedia.length > 0 ? news.multimedia[0].url : \"placeholder-image-url.jpg\"}\" alt=\"${news.title}\">\n                    </a>\n                    <h3>${news.title}</h3>\n                    <p>${news.abstract}</p>\n                `;\n            newsGrid.appendChild(newsCard);\n        });\n    }).catch((error)=>console.error(\"Error fetching section news:\", error));\n}\n// Fetch opinion articles for the sidebar\nfunction fetchOpinion() {\n    const url = `https://api.nytimes.com/svc/topstories/v2/opinion.json?api-key=${apiKey}`; // Use opinion section\n    fetch(url).then((response)=>response.json()).then((data)=>{\n        const opinionSidebar = document.getElementById(\"opinion-sidebar\");\n        opinionSidebar.innerHTML = `<h2>Opinion</h2>`; // Add title\n        data.results.forEach((opinion)=>{\n            const opinionItem = document.createElement(\"div\");\n            opinionItem.className = \"opinion-item\";\n            opinionItem.innerHTML = `\n                    <h3>${opinion.title}</h3>\n                    <p>${opinion.abstract}</p>\n                `;\n            opinionSidebar.appendChild(opinionItem);\n        });\n    }).catch((error)=>console.error(\"Error fetching opinion articles:\", error));\n}\n// Call fetchOpinion on page load\ndocument.addEventListener(\"DOMContentLoaded\", fetchOpinion);\n\n//# sourceMappingURL=index.af6c5a3e.js.map\n","const apiKey = 'QCStfBADCgUfROJuwwK6ZG3GIMWuxnyg'; // Ensure this is correct\nlet carouselIndex = 0;\nlet carouselImages = [];\n\n// Burger menu toggle functionality\nconst burger = document.getElementById('burger');\nconst navLinks = document.getElementById('nav-links');\n\nburger.addEventListener('click', () => {\n    navLinks.classList.toggle('show');\n});\n\n// Function to fetch news from the New York Times API (Home Section)\nfunction fetchNews() {\n    const url = `https://api.nytimes.com/svc/topstories/v2/home.json?api-key=${apiKey}`;\n\n    fetch(url)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return response.json();\n        })\n        .then(data => {\n            const newsGrid = document.getElementById('news-grid');\n            const carousel = document.getElementById('carousel');\n            newsGrid.innerHTML = ''; // Clear previous news\n            carousel.innerHTML = ''; // Clear previous carousel images\n            carouselImages = []; // Reset carousel images\n\n            data.results.forEach((news, index) => {\n                // Create news card\n                const newsCard = document.createElement('div');\n                newsCard.className = 'news-card';\n                newsCard.innerHTML = `\n                    <a href=\"${news.url}\" target=\"_blank\">\n                        <img src=\"${news.multimedia.length > 0 ? news.multimedia[0].url : 'placeholder-image-url.jpg'}\" alt=\"${news.title}\">\n                    </a>\n                    <h3>${news.title}</h3>\n                    <p>${news.abstract}</p>\n                `;\n                newsGrid.appendChild(newsCard);\n\n                // Add to carousel images, limit to 5\n                if (index < 5) {\n                    carouselImages.push(news.multimedia[0]?.url || 'placeholder-image-url.jpg');\n                }\n            });\n\n            startCarousel(); // Start carousel after loading images\n        })\n        .catch(error => console.error('Error fetching news:', error));\n}\n\n// Function to start the carousel\nfunction startCarousel() {\n    const carousel = document.getElementById('carousel');\n    carouselImages.forEach((image, index) => {\n        const img = document.createElement('img');\n        img.src = image;\n        img.style.display = index === 0 ? 'block' : 'none'; // Show the first image\n        carousel.appendChild(img);\n    });\n\n    setInterval(() => {\n        carousel.children[carouselIndex].style.display = 'none'; // Hide current image\n        carouselIndex = (carouselIndex + 1) % carouselImages.length; // Update index\n        carousel.children[carouselIndex].style.display = 'block'; // Show next image\n    }, 2000); // Change every 2 seconds\n}\n\n// Fetch news on page load\ndocument.addEventListener('DOMContentLoaded', () => {\n    fetchNews();\n\n    // Set up event listeners for navigation links\n    document.querySelectorAll('nav ul li a').forEach(link => {\n        link.addEventListener('click', (event) => {\n            event.preventDefault();\n            const section = event.target.getAttribute('data-section');\n            fetchTopStoriesBySection(section); // Fetch stories for the selected section\n        });\n    });\n});\n\n// Function to fetch top stories by section\nfunction fetchTopStoriesBySection(section) {\n    const url = `https://api.nytimes.com/svc/topstories/v2/${section}.json?api-key=${apiKey}`;\n\n    fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            const newsGrid = document.getElementById('news-grid');\n            newsGrid.innerHTML = ''; // Clear previous news\n\n            data.results.forEach(news => {\n                // Create news card\n                const newsCard = document.createElement('div');\n                newsCard.className = 'news-card';\n                newsCard.innerHTML = `\n                    <a href=\"${news.url}\" target=\"_blank\">\n                        <img src=\"${news.multimedia.length > 0 ? news.multimedia[0].url : 'placeholder-image-url.jpg'}\" alt=\"${news.title}\">\n                    </a>\n                    <h3>${news.title}</h3>\n                    <p>${news.abstract}</p>\n                `;\n                newsGrid.appendChild(newsCard);\n            });\n        })\n        .catch(error => console.error('Error fetching section news:', error));\n}\n\n// Fetch opinion articles for the sidebar\nfunction fetchOpinion() {\n    const url = `https://api.nytimes.com/svc/topstories/v2/opinion.json?api-key=${apiKey}`; // Use opinion section\n\n    fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            const opinionSidebar = document.getElementById('opinion-sidebar');\n            opinionSidebar.innerHTML = `<h2>Opinion</h2>`; // Add title\n            data.results.forEach(opinion => {\n                const opinionItem = document.createElement('div');\n                opinionItem.className = 'opinion-item';\n                opinionItem.innerHTML = `\n                    <h3>${opinion.title}</h3>\n                    <p>${opinion.abstract}</p>\n                `;\n                opinionSidebar.appendChild(opinionItem);\n            });\n        })\n        .catch(error => console.error('Error fetching opinion articles:', error));\n}\n\n// Call fetchOpinion on page load\ndocument.addEventListener('DOMContentLoaded', fetchOpinion);\n"],"names":["apiKey","carouselIndex","carouselImages","burger","document","getElementById","navLinks","addEventListener","classList","toggle","fetch","then","response","ok","Error","status","json","data","newsGrid","carousel","innerHTML","results","forEach","news","index","newsCard","createElement","className","url","multimedia","length","title","abstract","appendChild","push","startCarousel","image","img","src","style","display","setInterval","children","catch","error","console","querySelectorAll","link","event","preventDefault","fetchTopStoriesBySection","section","target","getAttribute","opinionSidebar","opinion","opinionItem"],"version":3,"file":"index.af6c5a3e.js.map"}